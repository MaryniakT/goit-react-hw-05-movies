{"version":3,"file":"static/js/83.ab82bc51.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies.jsx","service/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesInfo = styled.li`\n  margin-left: 10px;\n  margin-bottom: 15px;\n  color: #212121;\n  font-weight: 500;\n`;","import { Link } from 'react-router-dom';\nimport { MoviesInfo } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies, state }) => {\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <MoviesInfo key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={state}>\n              <p>{movie.title}</p>\n            </Link>\n          </MoviesInfo>\n        ))}\n      </ul>\n    </div>\n  );\n};","import styled from 'styled-components';\n\nexport const SearchBarStyle = styled.div`\n  margin-top: 30px;\n  margin-left: 30px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  height: 40px;\n  font-family: inherit;\n  font-size: 20px;\n  outline: none;\n  padding: 10px;\n  margin-bottom: 10px;\n  margin-right: 10px;\n  border-radius: 3px;\n\n  ::placeholder {\n    font-family: inherit;\n    font-size: 18px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 500px;\n    margin-bottom: 0;\n  }\n`;\n\nexport const Button = styled.button`\n  align-items: center;\n  font-size: 18px;\n  font-weight: 500;\n  text-transform: uppercase;\n  color: #fff;\n  background-color: rgb(48, 21, 168);\n  padding: 8px;\n  height: 40px;\n  border: 0;\n  border-radius: 3px;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n\n  :hover {\n    opacity: 1;\n    color:  #fff;\n    background-color: rgb(48, 21, 168);\n  }\n`;","\nimport { Button, Input,SearchBarStyle } from './SearchBox.styled';\n\nexport const SearchBox = ({ onSubmit }) => {\n  return (\n    <SearchBarStyle>\n      <form action=\"\" onSubmit={onSubmit}>\n        <Input\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"Enter movie name\"\n          autoFocus\n          autoComplete=\"off\"\n        />\n        <Button type=\"submit\" aria-label=\"Search movies\">\n          Search\n        </Button>\n      </form>\n    </SearchBarStyle>\n  );\n};","import { useState, useEffect } from 'react';\nimport { getMoviesBySearch } from '../service/movies-api';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport Loader from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (search === '') {\n      alert('Please enter movie name');\n      return;\n    }\n\n    setSearchParams({ search: e.target.elements.search.value });\n    e.target.reset();\n  };\n\n  useEffect(() => {\n    if (!search) return;\n\n    const getMovies = async name => {\n      try {\n        setIsLoading(true);\n        const movies = await getMoviesBySearch(name);\n        setMovies([...movies]);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovies(search);\n  }, [search]);\n\n  return (\n    <main>\n      <SearchBox onSubmit={handleSubmit} />\n      {isLoading ? (\n        <div>\n          <Loader />\n        </div>\n      ) : (\n        <MoviesList movies={movies} state={{ from: location }} />\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2a1327efd59ca204186229b27a9568f6';\n\nexport async function getTrendingMovies(page = 1) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/week?page=${page}`,\n      { params }\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesBySearch(name) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: name,\n      page: 1,\n    };\n    const response = await axios.get(`${BASE_URL}/search/movie?`, {\n      params,\n    });\n\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieDetails(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(`${BASE_URL}/movie/${id}?`, {\n      params,\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits?`, {\n      params,\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getMovieReviews(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    };\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?`, {\n      params,\n    });\n    \n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["MoviesInfo","styled","MoviesList","movies","state","map","movie","to","id","title","SearchBarStyle","Input","Button","SearchBox","onSubmit","action","type","name","placeholder","autoFocus","autoComplete","useState","setMovies","isLoading","setIsLoading","location","useLocation","useSearchParams","searchParams","setSearchParams","search","get","useEffect","getMovies","getMoviesBySearch","console","log","e","preventDefault","target","elements","value","reset","alert","Loader","from","BASE_URL","API_KEY","getTrendingMovies","page","params","api_key","language","axios","response","data","results","query","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}