{"version":3,"file":"static/js/777.b0567f4b.chunk.js","mappings":"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","sources":["components/MoviesInfo/MoviesInfo.styled.jsx","components/MoviesInfo/MoviesInfo.jsx","pages/MovieDetails.styled.jsx","pages/MovieDetails.jsx","service/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  border: 1px solid ${p => p.theme.colors.lightGreen};\n  border-radius: 4px;\n  box-shadow: 0px 5px 10px 3px rgba(0, 0, 0, 0.2);\n\n  @media screen and (min-width: 768px) {\n    width: 600px;\n    flex-direction: row;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  margin-left: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;","import { Container, Wrapper } from './MoviesInfo.styled';\n\nexport const MoviesInfo = ({\n  item: {\n    original_title,\n    release_date,\n    poster_path,\n    genres,\n    overview,\n    vote_average,\n  },\n}) => {\n  const releaseDate = new Date(release_date).getFullYear();\n\n  const image = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n    : '';\n\n  const score = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : 'No Score';\n\n  return (\n    <Container>\n      <img src={image} alt={original_title} width=\"320\" />\n      <Wrapper>\n        <h1>\n          {original_title} ({releaseDate})\n        </h1>\n        <p>User score: {score}</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h2>Genres</h2>\n        <p>{genres.map(genre => genre.name).join(', ')}</p>\n      </Wrapper>\n    </Container>\n  );\n};","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 30px;\n`;\n\nexport const BackLink = styled(Link)`\n  text-transform: uppercase;\n`;","import { MoviesInfo } from 'components/MoviesInfo/MoviesInfo';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'service/movies-api';\nimport { BackLink, Container } from 'pages/MovieDetails.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [selectedMovie, setSelectedMovie] = useState();\n  const [isLoading, setIsLoading] = useState({});\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovie = async movieId => {\n      try {\n        setIsLoading(true);\n        const movieDetails = await getMovieDetails(movieId);\n        setSelectedMovie(movieDetails);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovie(movieId);\n  }, [movieId]);\n\n  return (\n    <Container>\n      <BackLink to={backLinkLocationRef.current}>Back to Movies</BackLink>\n      {isLoading ? <p>LOADING...</p> : <MoviesInfo item={selectedMovie} />}\n\n      <ul>\n        <li>\n          <Link to=\"cast\">Watch casting</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Watch reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2a1327efd59ca204186229b27a9568f6';\n\nexport async function getTrendingMovies(page = 1) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/week?page=${page}`,\n      { params }\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesBySearch(name) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: name,\n      page: 1,\n    };\n    const response = await axios.get(`${BASE_URL}/search/movie?`, {\n      params,\n    });\n\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieDetails(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(`${BASE_URL}/movie/${id}?`, {\n      params,\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits?`, {\n      params,\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getMovieReviews(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    };\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?`, {\n      params,\n    });\n    \n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["Container","styled","p","theme","colors","lightGreen","Wrapper","MoviesInfo","item","original_title","release_date","poster_path","genres","overview","vote_average","releaseDate","Date","getFullYear","image","score","toFixed","src","alt","width","map","genre","name","join","BackLink","Link","useState","selectedMovie","setSelectedMovie","isLoading","setIsLoading","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","useEffect","getMovie","getMovieDetails","movieDetails","console","log","to","current","Suspense","fallback","Loader","BASE_URL","API_KEY","getTrendingMovies","page","params","api_key","language","axios","response","data","results","getMoviesBySearch","query","id","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}